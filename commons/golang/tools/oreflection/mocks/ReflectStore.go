// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import oreflection "github.com/nebtex/omnibuff/tools/golang/tools/oreflection"

// ReflectStore is an autogenerated mock type for the ReflectStore type
type ReflectStore struct {
	mock.Mock
}

// OReflect provides a mock function with given fields: magicType
func (_m *ReflectStore) OReflect(magicType string) (*oreflection.OType, error) {
	ret := _m.Called(magicType)

	var r0 *oreflection.OType
	if rf, ok := ret.Get(0).(func(string) *oreflection.OType); ok {
		r0 = rf(magicType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*oreflection.OType)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(magicType)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Upsert provides a mock function with given fields: magicType, table
func (_m *ReflectStore) Upsert(magicType string, table interface{}) *oreflection.OType {
	ret := _m.Called(magicType, table)

	var r0 *oreflection.OType
	if rf, ok := ret.Get(0).(func(string, interface{}) *oreflection.OType); ok {
		r0 = rf(magicType, table)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*oreflection.OType)
		}
	}

	return r0
}
